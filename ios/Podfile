# CocoaPods Configuration for React Native Project
require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

# Set environment variables for new architecture and Expo features
ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

# Use static frameworks for Firebase and React Native Firebase
$RNFirebaseAsStaticFramework = true

# Platform version (adjust as needed for compatibility)
platform :ios, podfile_properties['ios.deploymentTarget'] || '13.4'

# Enable deterministic UUIDs for builds
install! 'cocoapods', :deterministic_uuids => false

# Prepare the React Native project (automatically included modules)
prepare_react_native_project!

target 'whatsay' do
  # Include Expo modules
  use_expo_modules!

  # Configure CocoaPods for React Native
  config = use_native_modules!

  # Enable static frameworks (required for Firebase iOS SDK v9+)
  use_frameworks! :linkage => :static

  # Use React Native modules with Hermes engine support
  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
  )

  # Post-install configuration
  post_install do |installer|
    # React Native post-install script
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',
    )

    # Handle Xcode 14 signing for resource bundles
    installer.target_installation_results.pod_target_installation_results
      .each do |pod_name, target_installation_result|
      target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
        resource_bundle_target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
  end

  # Additional Expo-specific patches
  post_integrate do |installer|
    begin
      expo_patch_react_imports!(installer)
    rescue => e
      Pod::UI.warn e
    end
  end
end
